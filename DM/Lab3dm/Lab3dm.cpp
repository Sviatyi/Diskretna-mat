#include <iostream>
#include <clocale>
using namespace std;

int main()
{
	setlocale(LC_ALL, "Ukrainian");

	/////////////////////////////////////////

	int Pot1, Pot2;

	cout << "¬ведiть потужнiсть 1 множини: ";
	cin >> Pot1;
	cout << "¬ведiть потужнiсть 2 множини: ";
	cin >> Pot2;

	/////////////////////////////////////////
	
	float* arr1 = new float[Pot1];				//створюЇмо динам≥чний масив дл€ 1 множини
	float* arr2 = new float[Pot1];				//створюЇмо динам≥чний масив дл€ 2 множини
												
	cout << "¬ведiть 1 множину: ";				
	for (int i=0; i < Pot1; i++) {				//
		cin >> arr1[i];							//вводимо 1 множину
	}											//

	cout << "¬ведiть 2 множину: ";				
	for (int i=0; i < Pot1; i++) {				//
		cin >> arr2[i];							//вводимо 2 множину
	}											//

	//////////////////////////////////////////

	int** arr3 = new int*[Pot1];				//створюЇмо динам≥чний масив вказ≥вник≥в(р€дки)
												//
	for (int i = 0; i < Pot1; i++) {			//
		arr3[i] = new int [Pot2];				//створюЇмо стовпц≥
	}											//

	for (int i = 0; i < Pot1; i++) {			//
		for (int j = 0; j < Pot2; j++) {		//
			if (arr1[i] > 2 * arr2[j]) {		//ствоюЇтьс€ 
				arr3[i][j] = 1;					//б≥нарний 
			}									//масив
			else {								//що задовольн€Ї
				arr3[i][j] = 0;					//умову 
			}									//a>2b
		}										//
	}											//
	//////////////////////////////////////////

	delete [] arr1;								//видал€Їмо з пам'€т≥ 1 масив
	delete [] arr2;								//видал€Їмо з пам'€т≥ 2 масив

	//////////////////////////////////////////

	for (int i = 0; i < Pot1; i++) {			//
		for (int j = 0; j < Pot2; j++) {		//виводимо
			cout << arr3[i][j]<<"\t";			//б≥нарний
		}										//масив
		cout << endl;							//
	}											//
	
	///////////////////////////////////////////

	int check = 0;								//перев≥рка 
	for (int i = 0; i < Pot1; i++) {			//на 
		if (arr3[i][i] == 1) {					//рефлексивн≥сть
			check++;							//€кщо на гол д≥агонал≥ 1 то check++
		}										//
	}											//

	if (check == Pot1) {						//
		cout << "–ефлексивна ";					//€кщо вс€ гол д≥агональ 1 то матриц€ транзитивна 
	}											//

	else if (check == 0) {						//
		cout << "јнтирефлексивна ";				//€кщо вс€ гол д≥агональ 0 то матриц€ антитранзитивна 
	}											//

	else {										//
		cout << "Ќерефлексивна ";				//€кщо Ї 1 ≥ 0 то матриц€ нетранзитивна
	}											//

	////////////////////////////////////////////

	int  check0=0;								//
	int  check1=0;								//
	for (int i = 0; i < Pot1; i++) {			//перев≥рка
		for (int j = 0; j < Pot2; j++) {		//
			if (arr3[i][j]==arr3[j][i] && i!=j){ 
				check0++;						//
			}									//симетричн≥сть
			else {								//
				check1++;						//матриц≥
			}									//
		}										//
	}											//
	
	if (check0 == Pot1*Pot2-Pot1) {
		cout << "—иметрична ";
	}
	else if (check1 == Pot1*Pot2-Pot1) {
		cout << "јнтисиметрична ";
	}
	else{
		cout << "Ќесиметрична ";
	}

	//////////////////////////////////////////////

	int tranz = 0,tranz1=1;							//
	for (int i = 0; i < Pot1; i++) {				//
		for (int j = 0; j < Pot2; j++) {			//
			if (arr3[i][j]==1) {					//перев≥рка на транзитивн≥сть
				for (int z = 0; z < Pot1; z++) {	//€кщо arr3[i][j]=1
					if (arr3[j][z]==1) {			//починаЇтьс€ цикл
						if (arr3[i][z] == 1) {		//€кщо знаходитьс€ ще 1 одиниц€ в≥д j
							tranz = 1;				//шукаЇмо 3 одиницю 
						}							//€кщо 3 один€ Ї тод≥ транзитивн≥сть Ї
						else {						//в ≥ншому випадку немаЇ
							tranz1 = 0;				//
						}							//
					}								//
				}									//
			}										//
		}											//
	}												//

	if (tranz*tranz1 == 1) {						//
		cout << "“ранзитивна ";						//якщо Ї транзитивн≥сть
	}												//виводимо що матриц€ транзитивна
	else {											//в ≥ншому випадку перев≥р€Їмо на анти транзитивн≥сть

		int antitranz = 0;
		for (int i = 0; i < Pot1; i++) {				//
			for (int j = 0; j < Pot2; j++) {			//
				if (arr3[i][j] == 1) {					//перев≥рка на антитранзитивн≥сть
					for (int z = 0; z < Pot1; z++) {	//€кщо arr3[i][j]=1
						if (arr3[j][z] == 1) {			//починаЇтьс€ цикл
							if (arr3[i][z] == 0) {		//€кщо знаходитьс€ ще 1 одиниц€ в≥д j
								antitranz = 1;			//шукаЇмо 3 нуль 
							}							//€кщо 3 нуль Ї тод≥ антитранзитивн≥сть Ї
							else {						//в ≥ншому випадку немаЇ
								antitranz = 0;			//
							}							//
						}								//
					}									//
				}										//
			}											//
		}					
		
		if (antitranz == 1) {							//€кщо матриц€ антитранзитивна
			cout << "јнтитранзитивна ";					//виводимо що вона антитранзитивна
		}												//

		else {											//€кщо матриц€ н≥ транзитивна 
			cout << "Ќетранзитивна ";					//н≥ антитранзитивна
		}												//то виводимо що матриц€ нетранзитивна
	}
	///////////////////////////////////////////////



}
